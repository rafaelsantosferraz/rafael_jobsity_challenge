// Mocks generated by Mockito 5.0.17 from annotations
// in rafael_jobsity_challenge/test/widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rafael_jobsity_challenge/data/datasources/remote/tv_shows_remote_datasource.dart'
    as _i6;
import 'package:rafael_jobsity_challenge/data/repositories/tv_shows_repository.dart'
    as _i3;
import 'package:rafael_jobsity_challenge/domain/entities/pagination.dart'
    as _i2;
import 'package:rafael_jobsity_challenge/domain/entities/tv_show.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePagination_0<T> extends _i1.Fake implements _i2.Pagination<T> {}

/// A class which mocks [TvShowsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowsRepository extends _i1.Mock implements _i3.TvShowsRepository {
  MockTvShowsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Pagination<_i4.TvShow> get tvShowsPagination =>
      (super.noSuchMethod(Invocation.getter(#tvShowsPagination),
              returnValue: _FakePagination_0<_i4.TvShow>())
          as _i2.Pagination<_i4.TvShow>);
  @override
  _i2.Pagination<_i4.TvShow> get searchPagination =>
      (super.noSuchMethod(Invocation.getter(#searchPagination),
              returnValue: _FakePagination_0<_i4.TvShow>())
          as _i2.Pagination<_i4.TvShow>);
  @override
  String get searchInput =>
      (super.noSuchMethod(Invocation.getter(#searchInput), returnValue: '')
          as String);
  @override
  set searchInput(String? _searchInput) =>
      super.noSuchMethod(Invocation.setter(#searchInput, _searchInput),
          returnValueForMissingStub: null);
  @override
  _i5.Future<List<_i4.TvShow>> getTvShows() =>
      (super.noSuchMethod(Invocation.method(#getTvShows, []),
              returnValue: Future<List<_i4.TvShow>>.value(<_i4.TvShow>[]))
          as _i5.Future<List<_i4.TvShow>>);
  @override
  _i5.Future<List<_i4.TvShow>> getMoreTvShows() =>
      (super.noSuchMethod(Invocation.method(#getMoreTvShows, []),
              returnValue: Future<List<_i4.TvShow>>.value(<_i4.TvShow>[]))
          as _i5.Future<List<_i4.TvShow>>);
  @override
  _i5.Future<List<_i4.TvShow>> searchTvShows(String? name) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [name]),
              returnValue: Future<List<_i4.TvShow>>.value(<_i4.TvShow>[]))
          as _i5.Future<List<_i4.TvShow>>);
  @override
  _i5.Future<List<_i4.TvShow>> searchMoreTvShows() =>
      (super.noSuchMethod(Invocation.method(#searchMoreTvShows, []),
              returnValue: Future<List<_i4.TvShow>>.value(<_i4.TvShow>[]))
          as _i5.Future<List<_i4.TvShow>>);
}

/// A class which mocks [TvShowsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowsRemoteDataSource extends _i1.Mock
    implements _i6.TvShowsRemoteDataSource {
  MockTvShowsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i4.TvShow>> getTvShows([int? page = 0]) =>
      (super.noSuchMethod(Invocation.method(#getTvShows, [page]),
              returnValue: Future<List<_i4.TvShow>>.value(<_i4.TvShow>[]))
          as _i5.Future<List<_i4.TvShow>>);
  @override
  _i5.Future<List<_i4.TvShow>> searchTvShows({String? name, int? page = 0}) =>
      (super.noSuchMethod(
              Invocation.method(#searchTvShows, [], {#name: name, #page: page}),
              returnValue: Future<List<_i4.TvShow>>.value(<_i4.TvShow>[]))
          as _i5.Future<List<_i4.TvShow>>);
}
